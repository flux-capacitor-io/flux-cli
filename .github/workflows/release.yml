name: Auto Release and Version Bump

on:
  push:
    branches:
      - main

jobs:
  native-build:
    uses: ./.github/workflows/native-build.yml

  release:
    runs-on: ubuntu-latest
    needs: native-build
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Bump version and push tag
        uses: mathieudutour/github-tag-action@v6.2
        id: tag_version
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main
          default_bump: patch
          tag_prefix: ""

      - name: Build distribution
        run: ./gradlew build shadowJar generateScripts -PappVersion=${{ steps.tag_version.outputs.new_tag }}

      - name: Rename files
        run: mv build/libs/fluxzero-cli-${{ steps.tag_version.outputs.new_tag }}-all.jar build/libs/fluxzero-cli.jar

      - name: Verify JAR functionality
        run: |
          echo "Testing JAR with 'templates list' command..."
          java -jar build/libs/fluxzero-cli.jar templates list
          if [ $? -ne 0 ]; then
            echo "JAR verification failed!"
            exit 1
          fi
          echo "JAR verification successful!"

      - name: Verify install script
        run: |
          echo "Testing install script..."
          # Create a test environment
          export TEST_HOME=$(mktemp -d)
          export HOME=$TEST_HOME
          
          # Run install script with --install-path flag and local JAR
          bash build/release-scripts/install.sh --install-path --jar="$(pwd)/build/libs/fluxzero-cli.jar"
          
          # Check if the CLI script was created
          if [ ! -x "$TEST_HOME/.fluxzero/cli" ]; then
            echo "Install script failed to create CLI script!"
            exit 1
          fi
          
          # Test the installed CLI
          $TEST_HOME/.fluxzero/cli version
          if [ $? -ne 0 ]; then
            echo "Installed CLI verification failed!"
            exit 1
          fi
          
          # Check if fz was created in /usr/local/bin
          if [ ! -x "/usr/local/bin/fz" ]; then
            echo "Install script failed to create /usr/local/bin/fz!"
            exit 1
          fi
          
          # Test the fz command directly
          fz version
          if [ $? -ne 0 ]; then
            echo "fz command verification failed!"
            exit 1
          fi
          
          # Also test templates list command via fz
          fz templates list
          if [ $? -ne 0 ]; then
            echo "fz templates list command failed!"
            exit 1
          fi
          
          echo "Install script verification successful!"
          
          # Cleanup
          sudo rm -f /usr/local/bin/fz
          rm -rf $TEST_HOME

      - name: Download native artifacts
        uses: actions/download-artifact@v4
        with:
          path: native-artifacts

      - name: Prepare native executables for release
        run: |
          mkdir -p build/native-releases
          cp native-artifacts/flux-linux-amd64/flux build/native-releases/flux-linux-amd64
          cp native-artifacts/flux-macos-amd64/flux build/native-releases/flux-macos-amd64
          cp native-artifacts/flux-macos-arm64/flux build/native-releases/flux-macos-arm64
          chmod +x build/native-releases/*

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          files: |
            build/libs/fluxzero-cli.jar
            build/release-scripts/install.sh
            build/native-releases/flux-linux-amd64
            build/native-releases/flux-macos-amd64
            build/native-releases/flux-macos-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}