#!/usr/bin/env sh
##
## This script installs the fluxzero-cli native executable
## for your platform. No Java required!
##

# Parse command line arguments
INSTALL_PATH=""
CUSTOM_BINARY=""
FORCE_INSTALL=""
while [ $# -gt 0 ]; do
    case "$1" in
        --install-path)
            INSTALL_PATH="y"
            shift
            ;;
        --binary=*)
            CUSTOM_BINARY="${1#*=}"
            shift
            ;;
        --force)
            FORCE_INSTALL="y"
            shift
            ;;
        *)
            echo "Unknown option: $1"
            echo "Usage: $0 [--install-path] [--binary=PATH_OR_URL] [--force]"
            exit 1
            ;;
    esac
done

VERSION=@VERSION@
FLUX_DIR="$HOME/.fluxzero"
FLUX_BIN_DIR="$FLUX_DIR/bin"
FLUX_BINARY="$FLUX_BIN_DIR/fz"
TARGET_SCRIPT="/usr/local/bin/fz"

# Detect platform and architecture
OS=$(uname -s)
ARCH=$(uname -m)

case "$OS" in
    Linux)
        PLATFORM="linux"
        ;;
    Darwin)
        PLATFORM="macos"
        ;;
    *)
        echo "Error: Unsupported operating system: $OS"
        echo "Supported platforms: Linux, macOS"
        exit 1
        ;;
esac

case "$ARCH" in
    x86_64|amd64)
        ARCH_NAME="amd64"
        ;;
    arm64|aarch64)
        if [ "$PLATFORM" = "macos" ]; then
            ARCH_NAME="arm64"
        else
            echo "Error: ARM64 architecture only supported on macOS"
            exit 1
        fi
        ;;
    *)
        echo "Error: Unsupported architecture: $ARCH"
        echo "Supported architectures: x86_64/amd64, arm64 (macOS only)"
        exit 1
        ;;
esac

BINARY_NAME="flux-${PLATFORM}-${ARCH_NAME}"
BINARY_URL="https://github.com/flux-capacitor-io/flux-cli/releases/download/${VERSION}/${BINARY_NAME}"

echo "Creating installation directories..."
if ! mkdir -p "$FLUX_BIN_DIR"; then
  echo "Error: Failed to create directory $FLUX_BIN_DIR. Please check permissions and try again."
  exit 1
fi

echo "Platform: $PLATFORM-$ARCH_NAME"
echo "Binary: $BINARY_NAME"

if [ -n "$CUSTOM_BINARY" ]; then
  echo "Using custom binary: $CUSTOM_BINARY"
  
  # Check if it's a local file or URL
  if [ -f "$CUSTOM_BINARY" ]; then
    echo "Copying local binary..."
    if ! cp "$CUSTOM_BINARY" "$FLUX_BINARY"; then
      echo "Error: Failed to copy binary from $CUSTOM_BINARY"
      exit 1
    fi
  else
    echo "Downloading binary from custom URL..."
    if ! curl -s -L -o "$FLUX_BINARY" "$CUSTOM_BINARY"; then
      echo "Error: Failed to download binary from $CUSTOM_BINARY"
      exit 1
    fi
  fi
  
  if [ ! -s "$FLUX_BINARY" ]; then
    echo "Error: Binary file is empty after copy/download."
    exit 1
  fi
  
  echo "Custom binary installation successful."
elif [ -s "$FLUX_BINARY" ] && [ -z "$FORCE_INSTALL" ]; then
  echo "$FLUX_BINARY already exists. Skipping installation. Run 'fz upgrade' or use --force to reinstall."
else
  if [ -s "$FLUX_BINARY" ] && [ -n "$FORCE_INSTALL" ]; then
    echo "Forcing reinstallation of $FLUX_BINARY..."
  fi
  
  echo "Checking if $BINARY_NAME is available at remote URL..."
  HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" -L "$BINARY_URL")
  if [ "$HTTP_STATUS" -ne 200 ]; then
    echo "Error: Remote file not available (HTTP status $HTTP_STATUS). Aborting download."
    echo "URL: $BINARY_URL"
    exit 1
  fi

  echo "Downloading $BINARY_NAME..."
  if ! curl -s -L -o "$FLUX_BINARY" "$BINARY_URL"; then
    echo "Error: Failed to download $BINARY_NAME. Please check your internet connection and try again."
    exit 1
  fi

  if [ ! -s "$FLUX_BINARY" ]; then
    echo "Error: $BINARY_NAME was downloaded but is empty. Please try again."
    exit 1
  fi

  echo "Download successful."
fi

echo "Setting executable permissions on native binary..."
if ! chmod +x "$FLUX_BINARY"; then
  echo "Error: Failed to set executable permissions. Please check permissions and try again."
  exit 1
fi

## Installation on PATH

# Skip prompt if --install-path was provided
if [ -z "$INSTALL_PATH" ]; then
    echo "Would you like to make fluxzero-cli available on your PATH by creating ${TARGET_SCRIPT}? [y/N]"
    read -r INSTALL_PATH < /dev/tty
fi

case "${INSTALL_PATH}" in ([Yy]*)
    echo "Creating ${TARGET_SCRIPT}..."
    if command -v sudo >/dev/null 2>&1; then
      SUDO="sudo"
    else
      SUDO=""
    fi

    if ! printf '#!/usr/bin/env sh\nexec ~/.fluxzero/bin/fz "$@"' | $SUDO tee "$TARGET_SCRIPT" > /dev/null; then
      echo "Error: Failed to create ${TARGET_SCRIPT}. Please check permissions and try again."
      exit 1
    fi

    if ! $SUDO chmod +x "${TARGET_SCRIPT}"; then
      echo "Error: Failed to set executable permissions for ${TARGET_SCRIPT}. Please check permissions and try again."
      exit 1
    fi

    echo "Installation completed successfully. You can now use the fluxzero-cli by running fz from anywhere."
    ;;
  *)
    echo "Skipping PATH installation. You can run the CLI using ~/.fluxzero/bin/fz"
    echo "Installation completed successfully."
    ;;
esac